name: "tests 1"

on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    paths-ignore:
      - 'browser_patches/**'
      - 'docs/**'
    branches:
      - master
      - release-*

env:
  # Force terminal colors. @see https://www.npmjs.com/package/colors
  FORCE_COLOR: 1
  FLAKINESS_CONNECTION_STRING: ${{ secrets.FLAKINESS_CONNECTION_STRING }}

jobs:
  test_linux:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 12
    - run: npm ci
      env:
        DEBUG: pw:install
    - run: npm run build
    - run: node lib/cli/cli install-deps ${{ matrix.browser }} chromium
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- npm run test -- --project=${{ matrix.browser }}
    - run: node tests/config/checkCoverage.js ${{ matrix.browser }}
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: ${{ matrix.browser }}-${{ matrix.os }}-test-results
        path: test-results

  test_test_runner:
    name: Test Runner
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 12
    - run: npm ci
      env:
        DEBUG: pw:install
    - run: npm run build
    - run: node lib/cli/cli install-deps
    - run: node lib/cli/cli install
    - run: npm run ttest

  test_linux_docker:
    name: "Docker Ubuntu-${{ matrix.tag }} Tests"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        tag: [bionic, focal]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - run: npm ci
    - run: npm run build
    - name: Build
      run: bash utils/docker/build.sh ${{ matrix.tag }} playwright:localbuild-${{ matrix.tag }}
    - name: Clean & Prepare for Docker
      run: |
        npm run clean
        rm -rf node_modules/
        # The whole folder has to be world-writable to avoid UID conflicts between this mount and docker.
        chmod -R 777 .
    - name: Launch container
      run: docker run --rm -v $(pwd):/tmp/playwright --name playwright-docker-${{matrix.tag}}-test -d -t playwright:localbuild-${{ matrix.tag }} /bin/bash
    - name: Run "npm ci" inside docker
      run: docker exec --workdir /tmp/playwright/ --user=pwuser playwright-docker-${{matrix.tag}}-test  npm ci
    - name: Run "npm run build" inside docker
      run: docker exec --workdir /tmp/playwright/ --user=pwuser playwright-docker-${{matrix.tag}}-test npm run build
    - name: Run "npm run test" inside docker
      run: docker exec --workdir /tmp/playwright/ --user=pwuser -e INSIDE_DOCKER=1 -e CI=1 playwright-docker-${{matrix.tag}}-test xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" npm run test
    - run: ./utils/upload_flakiness_dashboard.sh ./test-results/report.json
      if: always()
    - uses: actions/upload-artifact@v1
      if: ${{ always() }}
      with:
        name: docker-ubuntu-${{ matrix.tag }}-test-results
        path: test-results

